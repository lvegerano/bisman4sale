# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# FOR TESTING ONLY!
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
}

type Category @model(subscriptions: null) {
  name: String! @primaryKey
  parent: String @index(name: "byParent", queryField: "categoriesByParent", sortKeyFields: ["name"])
  nodeID: Int! @index(name: "byNodeID", queryField: "categoriesByNode", sortKeyFields: ["name"])
  path: String!
}

# type User @model(subscriptions: null) {
#   name: String
#   email: String!
#   ads: [Ad] @hasMany
#   watchList: WatchList @hasOne
# }

# type WatchList @model(subscriptions: null) {
#   id: ID!
#   userID: ID!
#   ads: [Ad] @manyToMany(relationName: "AdWatchLists")
# }

# type Conversation @model {
#   id: ID!
#   name: String!
#   adID: ID!
#   Ad: Ad @hasOne
#   messages: [Message] @hasMany
# }

# type Message @model {
#   id: ID!
#   message: String!
#   conversationID: ID! @index(sortKeyFields: ["createdAt"])
#   fromUserID: ID!
#   toUserID: ID!
#   adID: ID!
#   from: User @hasOne(fields: ["fromUserID"])
#   to: User @hasOne(fields: ["toUserID"])
#   createdAt: AWSDateTime!
# }

type Ad @searchable @model(subscriptions: null) {
  name: String!
  description: String!
  condition: String!
  price: String
  status: String
  categoryPath: String!
  images: [Image] @hasMany
  imageCount: Int
  paidImages: Boolean
  userID: String!
  expiration: AWSDateTime!
  autoRelist: Boolean
  scheduledRelist: Int!
  # watchLists: [WatchList] @manyToMany(relationName: "AdWatchLists")
}

type Image @model(subscriptions: null) {
  url: String!
}
